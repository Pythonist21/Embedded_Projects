
GccApplication8.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000148  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .bss          00000002  00800060  00800060  000001bc  2**0
                  ALLOC
  2 .comment      00000030  00000000  00000000  000001bc  2**0
                  CONTENTS, READONLY
  3 .debug_aranges 00000058  00000000  00000000  000001ec  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   000001a4  00000000  00000000  00000244  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 0000012d  00000000  00000000  000003e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   000000d9  00000000  00000000  00000515  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  000000c0  00000000  00000000  000005f0  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    000001c2  00000000  00000000  000006b0  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    000001ff  00000000  00000000  00000872  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000038  00000000  00000000  00000a71  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	1c c0       	rjmp	.+56     	; 0x3a <__ctors_end>
   2:	2b c0       	rjmp	.+86     	; 0x5a <__bad_interrupt>
   4:	2a c0       	rjmp	.+84     	; 0x5a <__bad_interrupt>
   6:	29 c0       	rjmp	.+82     	; 0x5a <__bad_interrupt>
   8:	28 c0       	rjmp	.+80     	; 0x5a <__bad_interrupt>
   a:	27 c0       	rjmp	.+78     	; 0x5a <__bad_interrupt>
   c:	50 c0       	rjmp	.+160    	; 0xae <__vector_6>
   e:	25 c0       	rjmp	.+74     	; 0x5a <__bad_interrupt>
  10:	24 c0       	rjmp	.+72     	; 0x5a <__bad_interrupt>
  12:	23 c0       	rjmp	.+70     	; 0x5a <__bad_interrupt>
  14:	22 c0       	rjmp	.+68     	; 0x5a <__bad_interrupt>
  16:	21 c0       	rjmp	.+66     	; 0x5a <__bad_interrupt>
  18:	20 c0       	rjmp	.+64     	; 0x5a <__bad_interrupt>
  1a:	1f c0       	rjmp	.+62     	; 0x5a <__bad_interrupt>
  1c:	1e c0       	rjmp	.+60     	; 0x5a <__bad_interrupt>
  1e:	1d c0       	rjmp	.+58     	; 0x5a <__bad_interrupt>
  20:	1c c0       	rjmp	.+56     	; 0x5a <__bad_interrupt>
  22:	1b c0       	rjmp	.+54     	; 0x5a <__bad_interrupt>
  24:	1a c0       	rjmp	.+52     	; 0x5a <__bad_interrupt>
  26:	40 c0       	rjmp	.+128    	; 0xa8 <_Z8seg_initj+0x44>
  28:	24 c0       	rjmp	.+72     	; 0x72 <_Z8seg_initj+0xe>
  2a:	26 c0       	rjmp	.+76     	; 0x78 <_Z8seg_initj+0x14>
  2c:	28 c0       	rjmp	.+80     	; 0x7e <_Z8seg_initj+0x1a>
  2e:	2a c0       	rjmp	.+84     	; 0x84 <_Z8seg_initj+0x20>
  30:	2c c0       	rjmp	.+88     	; 0x8a <_Z8seg_initj+0x26>
  32:	2e c0       	rjmp	.+92     	; 0x90 <_Z8seg_initj+0x2c>
  34:	30 c0       	rjmp	.+96     	; 0x96 <_Z8seg_initj+0x32>
  36:	32 c0       	rjmp	.+100    	; 0x9c <_Z8seg_initj+0x38>
  38:	34 c0       	rjmp	.+104    	; 0xa2 <_Z8seg_initj+0x3e>

0000003a <__ctors_end>:
  3a:	11 24       	eor	r1, r1
  3c:	1f be       	out	0x3f, r1	; 63
  3e:	cf e5       	ldi	r28, 0x5F	; 95
  40:	d4 e0       	ldi	r29, 0x04	; 4
  42:	de bf       	out	0x3e, r29	; 62
  44:	cd bf       	out	0x3d, r28	; 61

00000046 <__do_clear_bss>:
  46:	20 e0       	ldi	r18, 0x00	; 0
  48:	a0 e6       	ldi	r26, 0x60	; 96
  4a:	b0 e0       	ldi	r27, 0x00	; 0
  4c:	01 c0       	rjmp	.+2      	; 0x50 <.do_clear_bss_start>

0000004e <.do_clear_bss_loop>:
  4e:	1d 92       	st	X+, r1

00000050 <.do_clear_bss_start>:
  50:	a2 36       	cpi	r26, 0x62	; 98
  52:	b2 07       	cpc	r27, r18
  54:	e1 f7       	brne	.-8      	; 0x4e <.do_clear_bss_loop>
  56:	72 d0       	rcall	.+228    	; 0x13c <main>
  58:	75 c0       	rjmp	.+234    	; 0x144 <_exit>

0000005a <__bad_interrupt>:
  5a:	d2 cf       	rjmp	.-92     	; 0x0 <__vectors>

0000005c <_Z9port_initv>:
п»ї
#include "seg.h"
void port_init()
{
	DDRD = 0xFF;
  5c:	8f ef       	ldi	r24, 0xFF	; 255
  5e:	81 bb       	out	0x11, r24	; 17
	PORTD = 0xFF;
  60:	82 bb       	out	0x12, r24	; 18
  62:	08 95       	ret

00000064 <_Z8seg_initj>:
}
void seg_init(unsigned int i)
{
	switch(i)
  64:	8a 30       	cpi	r24, 0x0A	; 10
  66:	91 05       	cpc	r25, r1
  68:	08 f5       	brcc	.+66     	; 0xac <_Z8seg_initj+0x48>
  6a:	fc 01       	movw	r30, r24
  6c:	ed 5e       	subi	r30, 0xED	; 237
  6e:	ff 4f       	sbci	r31, 0xFF	; 255
  70:	09 94       	ijmp
	{
		case 1:
		PORTD =~0b00000110;
  72:	89 ef       	ldi	r24, 0xF9	; 249
  74:	82 bb       	out	0x12, r24	; 18
		break;
  76:	08 95       	ret
		case 2:
		PORTD =~0b01011011;
  78:	84 ea       	ldi	r24, 0xA4	; 164
  7a:	82 bb       	out	0x12, r24	; 18
		break;
  7c:	08 95       	ret
		case 3:
		PORTD =~0b01001111;
  7e:	80 eb       	ldi	r24, 0xB0	; 176
  80:	82 bb       	out	0x12, r24	; 18
		break;
  82:	08 95       	ret
		case 4:
		PORTD =~0b01100110;
  84:	89 e9       	ldi	r24, 0x99	; 153
  86:	82 bb       	out	0x12, r24	; 18
		break;
  88:	08 95       	ret
		case 5:
		PORTD =~0b01101101;
  8a:	82 e9       	ldi	r24, 0x92	; 146
  8c:	82 bb       	out	0x12, r24	; 18
		break;
  8e:	08 95       	ret
		case 6:
		PORTD =~0b01111101;
  90:	82 e8       	ldi	r24, 0x82	; 130
  92:	82 bb       	out	0x12, r24	; 18
		break;
  94:	08 95       	ret
		case 7:
		PORTD =~0b00000111;
  96:	88 ef       	ldi	r24, 0xF8	; 248
  98:	82 bb       	out	0x12, r24	; 18
		break;
  9a:	08 95       	ret
		case 8:
		PORTD =~0b01111111;
  9c:	80 e8       	ldi	r24, 0x80	; 128
  9e:	82 bb       	out	0x12, r24	; 18
		break;
  a0:	08 95       	ret
		case 9:
		PORTD =~0b01101111;
  a2:	80 e9       	ldi	r24, 0x90	; 144
  a4:	82 bb       	out	0x12, r24	; 18
		break;
  a6:	08 95       	ret
		case 0:
		PORTD =~0b00111111;
  a8:	80 ec       	ldi	r24, 0xC0	; 192
  aa:	82 bb       	out	0x12, r24	; 18
  ac:	08 95       	ret

000000ae <__vector_6>:
#include <avr/interrupt.h>
#include "seg.h"

unsigned int c=0;
ISR(TIMER1_COMPA_vect)
{
  ae:	1f 92       	push	r1
  b0:	0f 92       	push	r0
  b2:	0f b6       	in	r0, 0x3f	; 63
  b4:	0f 92       	push	r0
  b6:	11 24       	eor	r1, r1
  b8:	2f 93       	push	r18
  ba:	3f 93       	push	r19
  bc:	4f 93       	push	r20
  be:	5f 93       	push	r21
  c0:	6f 93       	push	r22
  c2:	7f 93       	push	r23
  c4:	8f 93       	push	r24
  c6:	9f 93       	push	r25
  c8:	af 93       	push	r26
  ca:	bf 93       	push	r27
  cc:	ef 93       	push	r30
  ce:	ff 93       	push	r31
	if(c>9)
  d0:	80 91 60 00 	lds	r24, 0x0060
  d4:	90 91 61 00 	lds	r25, 0x0061
  d8:	0a 97       	sbiw	r24, 0x0a	; 10
  da:	20 f0       	brcs	.+8      	; 0xe4 <__vector_6+0x36>
	{
		c=0;
  dc:	10 92 61 00 	sts	0x0061, r1
  e0:	10 92 60 00 	sts	0x0060, r1
	}
	seg_init(c);
  e4:	80 91 60 00 	lds	r24, 0x0060
  e8:	90 91 61 00 	lds	r25, 0x0061
  ec:	bb df       	rcall	.-138    	; 0x64 <_Z8seg_initj>
	c++;
  ee:	80 91 60 00 	lds	r24, 0x0060
  f2:	90 91 61 00 	lds	r25, 0x0061
  f6:	01 96       	adiw	r24, 0x01	; 1
  f8:	90 93 61 00 	sts	0x0061, r25
  fc:	80 93 60 00 	sts	0x0060, r24
}
 100:	ff 91       	pop	r31
 102:	ef 91       	pop	r30
 104:	bf 91       	pop	r27
 106:	af 91       	pop	r26
 108:	9f 91       	pop	r25
 10a:	8f 91       	pop	r24
 10c:	7f 91       	pop	r23
 10e:	6f 91       	pop	r22
 110:	5f 91       	pop	r21
 112:	4f 91       	pop	r20
 114:	3f 91       	pop	r19
 116:	2f 91       	pop	r18
 118:	0f 90       	pop	r0
 11a:	0f be       	out	0x3f, r0	; 63
 11c:	0f 90       	pop	r0
 11e:	1f 90       	pop	r1
 120:	18 95       	reti

00000122 <_Z10timer_initv>:
void timer_init()
{
	TCCR1B |=(1<<WGM12);
 122:	8e b5       	in	r24, 0x2e	; 46
 124:	88 60       	ori	r24, 0x08	; 8
 126:	8e bd       	out	0x2e, r24	; 46
	TIMSK |=(1<<OCIE1A);
 128:	89 b7       	in	r24, 0x39	; 57
 12a:	80 61       	ori	r24, 0x10	; 16
 12c:	89 bf       	out	0x39, r24	; 57
	OCR1AH = 0b10000000; //записываем в регистр число для сравнения
 12e:	80 e8       	ldi	r24, 0x80	; 128
 130:	8b bd       	out	0x2b, r24	; 43
	OCR1AL = 0b00000000;
 132:	1a bc       	out	0x2a, r1	; 42
	TCCR1B |=(1<<CS12);
 134:	8e b5       	in	r24, 0x2e	; 46
 136:	84 60       	ori	r24, 0x04	; 4
 138:	8e bd       	out	0x2e, r24	; 46
 13a:	08 95       	ret

0000013c <main>:
}
int main(void)
{
	port_init();
 13c:	8f df       	rcall	.-226    	; 0x5c <_Z9port_initv>
	timer_init();
 13e:	f1 df       	rcall	.-30     	; 0x122 <_Z10timer_initv>
	sei();
 140:	78 94       	sei
 142:	ff cf       	rjmp	.-2      	; 0x142 <main+0x6>

00000144 <_exit>:
 144:	f8 94       	cli

00000146 <__stop_program>:
 146:	ff cf       	rjmp	.-2      	; 0x146 <__stop_program>
